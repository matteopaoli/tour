import { WithId } from "mongodb"
import { GetServerSideProps, GetServerSidePropsResult, NextPageContext } from "next"
import Head from "next/head"
import Image from "next/image"
import { getTripById } from "../../lib/utils"
import { TripDetails } from "../../types"

type TripPageProps = {
  trip: TripDetails & { _id: string }
}

const TripPage = ({ trip }: TripPageProps): JSX.Element => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="hero is-primary is-fullheight">
        <div className="hero-head">
          header
        </div>
        <div className="hero-body">
          <div className="container">
            <div className="card">
              <div className="card-image">
                <figure className="image is-4by3">
                  <img src="https://via.placeholder.com/50" alt="Placeholder image" />
                </figure>
              </div>
              <div className="card-content">
                <p className="title is-4 has-text-black">
                  {trip.points.map(x => x.name).join(' - ')}
                </p>
                <p>Departure: {new Date(trip.dateStart).toLocaleString()}</p>
              </div>
            </div>
          </div>
        </div>
        <div className="hero-foot">
          footer
        </div>
      </section>
    </>
  )
}

export default TripPage

export const getServerSideProps= async (context: NextPageContext): Promise<GetServerSidePropsResult<TripPageProps>> => {
  if (context.query.id) {
    let trip = await getTripById(context.query.id as string)
    trip = JSON.parse(JSON.stringify(trip))
    console.log(trip)
    if (trip) {
      return {
        props: {
          trip
        }
      }
    }
    return {
      notFound: true,
    }
    // else return {
    //   redirect: {
    //     statusCode: 404,
    //     permanent: false,
    //   }
    // }
  }
  // else return {
  //   redirect: {
  //     path: '/',
  //   }
  // }
}