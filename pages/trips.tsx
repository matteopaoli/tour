import { GetServerSidePropsResult, NextPageContext } from "next"
import Head from "next/head"
import { Trip } from '../types'
import SearchResults from "../components/search-results"
import { searchTrips } from "./api/search"

interface TripPageProps {
  trips: Trip[]
}

const TripPage = ({ trips }: TripPageProps): JSX.Element => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="hero-body has-background-primary">
        <div className="container">
          <SearchResults trips={trips} />
        </div>
      </div>
    </>
  )
}

export default TripPage

export const getServerSideProps = async (context: NextPageContext): Promise<GetServerSidePropsResult<TripPageProps>> => {
  const { departure, destination, departureDate } = context.query

  if (departure && destination && departureDate) {
    const trips = JSON.parse(JSON.stringify((await searchTrips(departure.toString(), destination.toString(), departureDate.toString())))) as Trip[]
    return {
      props: {
        trips
      }
    }     
  }
  return {
    notFound: true
  }

}