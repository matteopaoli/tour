import { GetServerSidePropsResult, NextPageContext } from "next"
import Head from "next/head"
import { Trip } from '../types'
import { getTrips } from "../lib/utils"
import SearchResults from "../components/search-results"

type TripPageProps = {
  trips: Trip[]
}

const TripPage = ({ trips }: TripPageProps): JSX.Element => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="hero-body">
        <div className="container">
          <SearchResults trips={trips} />
        </div>
      </div>
    </>
  )
}

export default TripPage

export const getServerSideProps= async (context: NextPageContext): Promise<GetServerSidePropsResult<TripPageProps>> => {
  const { departure, destination } = context.query
  console.log('departure', departure)
  console.log('destination', destination)

  if (departure && destination) {
    let trips = await getTrips(departure.toString(), destination.toString())
    trips = JSON.parse(JSON.stringify(trips))
    if (trips) {
      return {
        props: {
          trips
        }
      }
    }
    return {
      notFound: true,
    }
  }
  return {
    notFound: true,
  }
}